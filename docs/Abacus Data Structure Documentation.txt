
DOCUMENTATION FOR ABACUS

I recommend turning off word wrap as it kills the formatting

#############################################################################################

JSON data:

Frames=[              |      An array of all Frames
  FrameID,            |        The unique ID of the frame
  BasePrice,          |        The price of the frame
  BaseWeight,         |        The weight of the frame
  Name,               |        The Name of the frame
  Desc,               |        A Description of the frame
  Parts=[             |        An array of the parts associated with the frame - Each part is a "page" for CUSTOMIZE 
    PartID,           |          The ID of the part (Must be unique PER FRAME)
    Name,             |          The name of the part
    NumSubImages,     |          The number of SubImages this part will contain - I.E. since wheels are displayed as 2 images (left/right), this should be 2 - For singular image parts this is 1
    ZRank[][],        |          A 2D array of z-rankings.  The indicies are [subImageIndex][angle] - These are not explicitly indices, two images that could be on the same layer should share a zRank - EXAMPLE: Wheels [[3,7,1,8,4],[6,3,1,2,5]] - EXAMPLE: BackRest [[4,6,2,1,5]]   
    Options=[         |          An array of options for a part.  These are what the user "adds" to their wheelchair.  Each of these creates a SideBarItem
      OptionID,       |            The option's ID (Must be unique PER FRAME - NOT PER PART!!!)
      Name,           |            The name of the option
      Price,          |            The price of the option
      Weight,         |            The weight of the option
      Desc,           |            A description of the option
      ThumbnailURL,   |            The URL of the thumbnail image
      Colors=[        |            An array of color options for this option - can be null if no options available
        ColorID,      |              The ID of this color (must be unique PER OPTION)
        ColorName,    |              The name of the color
        Hex           |              The colors hex value represented as "#000000"
      ]               |
    ]                 |
  ]                   |
  Measures=[          |         An array of measurements associated with the frame - Each measurement is a "page" for MEASURE
    MeasureID,        |           The ID of the measurement (Must be unique PER FRAME)
    Name,             |           The name of the measurement
    Desc,             |           A short description of the measurement - can include html formattings such as <strong>
    MeasureOptions[], |           An array of options as strings - This is waht will populate the Drop Down List - All measurements in inches
    Tip,              |           A helpful tip for the measurement - can include html formatting such as <strong>
    Details,          |           Helpful details about the measurement
    VideoURL,         |           The URL of a video demoing the measurement
    ImageURLs[],      |           An array of image URLs that will appear in the carousel
    gifURL            |           The URL of the gif associated with the measurement
  ]                   |
]                     |

#############################################################################################

GENERATING THE PREVIEW IMAGE:

Goal Output: An array of imageURLs ordered by zIndex (lowest z-index to highest)

getCurWheelchairImages()
  -- For each part in curWheelchair.parts
     -- For each subImage in part
        -- Add subImageURL and zRank to array
  -- Sort array by zRank
  -- Return array

##############################################################################################

GENERATING SUBIMAGE URLS:

Given Values:
 - BaseURL
 - FrameID
 - PartID
 - OptionID
 - ColorID (0 if no color options)
 - SubImageIndex (0 if only one subImage)
 - Angle

Output: "<BaseURL>/frame<FrameID>/part<PartID>/<OptionID>_<ColorID>_<SubImageIndex>_<Angle>.png"

EXAMPLE:
 - BaseURL = "http://intellimages/"
 - FrameID = 0
 - PartID = 1
 - OptionID = 2
 - ColorID = 3
 - SubImageIndex = 4
 - Angle = AngleType.FRONT

"http://intellimages/frame0/part1/2_3_4_Front.png"

##############################################################################################

Z-RANKINGS AND SUBIMAGES

If a part takes multiple images to display, such as Wheels which includes both a left and
right wheel image, then "Wheels" should have 2 subimages.  For this example, let the left
wheel be subimage 0 and the right be subimage 1.  When the array of images is being assembled,
both subimages are put into the array and then sorted by their respective zRankings.  The
indicies assigned must be zero-indexed, incrementing integers.

ZRankings are contained in a 2D array. The first index of the array is the subImage Index.
If zRank=[[1,2,3,4,5],[6,7,8,9,10]], then zRank[0]=[1,2,3,4,5] and zRank[1]=[6,7,8,9,10].
Thus, zRank[0] corresponds to the zRankings for the left wheel, and zRank[1] for the right.

The second index is the angle in the order [BACK, BACKRIGHT, RIGHT, FRONT, FRONTRIGHT].

For simplicity's sake, a part that doesn't need subimages will simply be represented with
zRank=[[1,2,3,4,5]], as if it consisted of just one subImage.

zRankings are not indicies per se, but simply denote parts that could be at the same index
without issue.  This makes generating the rankings easier and should improve the array sorting
speed.

